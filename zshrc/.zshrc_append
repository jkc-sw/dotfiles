#!/bin/zsh

# The plug in location
export ZSH_PLUG_DIR=$HOME/.config/zsh

#===============================================================================
# Thank you, https://github.com/ChristianChiarulli/Machfiles/blob/1e52b9190d5e54d35f305b53d6b5dfe7306c395e/zsh/.config/zsh/zshrc
#===============================================================================
# Function to source files if they exist
function zsh_add_file() {
    test -f "$ZSH_PLUG_DIR/$1" && source "$ZSH_PLUG_DIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo -n $1 | cut -d "/" -f 2)
    if test -d "$ZSH_PLUG_DIR/plugins/$PLUGIN_NAME"; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZSH_PLUG_DIR/plugins/$PLUGIN_NAME"
    fi
}

# function zsh_add_completion() {
#     PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
#     if [ -d "$ZSH_PLUG_DIR/plugins/$PLUGIN_NAME" ]; then
#         # For completions
# 		completion_file_path=$(ls $ZSH_PLUG_DIR/plugins/$PLUGIN_NAME/_*)
# 		fpath+="$(dirname "${completion_file_path}")"
#         zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
#     else
#         git clone "https://github.com/$1.git" "$ZSH_PLUG_DIR/plugins/$PLUGIN_NAME"
# 		fpath+=$(ls $ZSH_PLUG_DIR/plugins/$PLUGIN_NAME/_*)
#         [ -f $ZSH_PLUG_DIR/.zccompdump ] && $ZSH_PLUG_DIR/.zccompdump
#     fi
# 	completion_file="$(basename "${completion_file_path}")"
# 	if [ "$2" = true ] && compinit "${completion_file:1}"
# }

#===============================================================================
# Plugins
#===============================================================================
zsh_add_plugin "zsh-users/zsh-autosuggestions"
zsh_add_plugin "zsh-users/zsh-syntax-highlighting"

#===============================================================================
# Borrowed from other, check to make sure I understand
# Thank you, https://github.com/ChristianChiarulli/Machfiles/blob/1e52b9190d5e54d35f305b53d6b5dfe7306c395e/zsh/.config/zsh/zshrc
#===============================================================================
# some useful options (man zshoptions)
setopt autocd extendedglob nomatch menucomplete
setopt interactive_comments
stty stop undef		# Disable ctrl-s to freeze terminal.
zle_highlight=('paste:none')

# beeping is annoying
unsetopt BEEP

# completions
autoload -Uz compinit
zstyle ':completion:*' menu select
# zstyle ':completion::complete:lsof:*' menu yes select
zmodload zsh/complist
compinit
_comp_options+=(globdots)		# Include hidden files.

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# Colors
autoload -Uz colors && colors

bindkey -v
bindkey "^p" up-line-or-beginning-search # Up
bindkey "^n" down-line-or-beginning-search # Down
bindkey "^k" up-line-or-beginning-search # Up
bindkey "^j" down-line-or-beginning-search # Down

autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# in 10ms, 1 is 10ms
KEYTIMEOUT=1

HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVEHIST=100000
setopt INC_APPEND_HISTORY_TIME
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

#===============================================================================
# User configuration
#===============================================================================
# custom setup
. "$HOME/.shellfunc"
add_shell_specific zsh

# refresh the ssh tty
# https://babushk.in/posts/renew-environment-tmux.html
if [ -n "$TMUX" ]; then
    function refresh {
        tmux_env="$(tmux show-environment)"
        new_ssh_tty="$(echo -n "$tmux_env" | grep '^SSH_TTY')"
        if [[ -n $new_ssh_tty ]]; then
            export "$new_ssh_tty"
        fi
    }
else
    function refresh { }
fi

function preexec {
    refresh
}

