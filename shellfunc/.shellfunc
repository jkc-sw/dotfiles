#!/bin/sh

# Declare function to add path
# https://unix.stackexchange.com/questions/14895/duplicate-entries-in-path-a-problem
# Answer from: Gilles
# answered Jun 13 '11 at 8:34
addThisPath() {
    case ":$PATH:" in
    *":$1:"*) :;; # already there
    *) PATH="$1:$PATH";; # or PATH="$PATH:$1"
    esac
}

addThisPath "$HOME/.cargo/bin"
addThisPath "$HOME/.local/bin"
addThisPath "/usr/local/sbin"
addThisPath "/usr/sbin"
addThisPath "/opt/TurboVNC/bin"

# some configuration to shell
export TERM=xterm-256color
export EDITOR=nvim
export LANG=en_US.UTF-8

# To have xmonad and matlab play nicely
export _JAVA_AWT_WM_NONREPARENTING=1

# To be save
alias rm='rm -I'

# configuration to rg and fd
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
if command -v fd >/dev/null 2>&1; then
    export FZF_DEFAULT_COMMAND='fd --follow --hidden --type file'
    export FZF_ALT_C_COMMAND="fd --follow --hidden --type directory"
elif command -v fdfind >/dev/null 2>&1; then
    export FZF_DEFAULT_COMMAND='fdfind --follow --hidden --type file'
    export FZF_ALT_C_COMMAND="fdfind --follow --hidden --type directory"
    alias fd=fdfind
fi
export FZF_DEFAULT_OPTS="--color=dark"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# cpu managements
alias cinfo='sudo modprobe msr && sudo cpupower frequency-info'
alias cmonitor='sudo modprobe msr && sudo turbostat --show Core,CPU,Avg_MHz,Busy%,Bzy_MHz,TSC_MHz,CoreTmp,PkgTmp,PkgWatt,RAMWatt'
alias cperf='sudo modprobe msr && sudo cpupower frequency-set -g performance'

# handle fzf
if test -n "$SHELLNAME"; then
    eval "$(starship init "$SHELLNAME")"
    eval "$(zoxide init "$SHELLNAME")"

    # Handle the fzf
    if test -d "$HOME/.vim/plugged/fzf"; then
        addThisPath "$HOME/.vim/plugged/fzf/bin"
        if test -n "$SHELLNAME"; then
            # # shellcheck source=/dev/null
            # . "$HOME/.vim/plugged/fzf/shell/completion.$SHELLNAME"  # Too slow

            # shellcheck source=/dev/null
            . "$HOME/.vim/plugged/fzf/shell/key-bindings.$SHELLNAME"
        fi
    fi
fi

# shortcut to start nvim
nv() {
    if test -d "$HOME/miniconda3/envs/dev_env_ansible"; then
        conda activate "$HOME/miniconda3/envs/dev_env_ansible"
    fi

    if command -v nvim >/dev/null 2>&1; then
        nvim -c "lua require'jerry.lsp.config'.alternative_lsp{}" "$@"
    fi
}

# shortcut to start nvim with host being a tmux
nvt() {
    TOCLIP_HOST_TMUX=2 nv "$@"
}

# add a command to start docker instance
dr() {
    ~/repos/dev-env-ansible/rr.sh use u20 "$@"
}

# try to use bat in man
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# nvm stuff
export NVM_DIR="$HOME/.nvm"

# asdf dir
export ASDF_DIR="$HOME/repos/asdf"

# function to update plugin
update_zsh_plugins() { (
    if test -d "$ZSH_PLUG_DIR"; then
        cd "$ZSH_PLUG_DIR/plugins" || return
        for d in $(fd -t d -d 1); do
            echo "Git pull $d"
            git -C "$d" pull -q
        done
    fi
) }

# Source some tools that I don't use often
sdev() {
    if test -z "$NVM_BIN"; then
        # shellcheck source=/dev/null
        . "$NVM_DIR/nvm.sh"  # This loads nvm
        # shellcheck source=/dev/null
        . "$NVM_DIR/bash_completion"  # Too slow
        # shellcheck source=/dev/null
        . "$ASDF_DIR/asdf.sh"
    fi
}

# Add the fcitx support
if command -v fcitx >/dev/null 2>&1; then
    export GTK_IM_MODULE=fcitx
    export QT_IM_MODULE=fcitx
    export XMODIFIERS=@im=fcitx
fi
