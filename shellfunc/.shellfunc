#!/bin/sh

# Declare function to add path
# https://unix.stackexchange.com/questions/14895/duplicate-entries-in-path-a-problem
# Answer from: Gilles
# answered Jun 13 '11 at 8:34
function addThisPath() {
    case ":$PATH:" in
    *":$1:"*) :;; # already there
    *) PATH="$1:$PATH";; # or PATH="$PATH:$1"
    esac
}

# add cargo path
addThisPath "$HOME/.cargo/bin"

# some configuration to shell
export TERM=xterm-256color
export EDITOR=nvim

# configuration to rg and fd
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
if command -v fd &>/dev/null; then
    export FZF_DEFAULT_COMMAND='fd --hidden --type file'
elif command -v fdfind &>/dev/null; then
    export FZF_DEFAULT_COMMAND='fdfind --hidden --type file'
    alias fd=fdfind
fi
export FZF_DEFAULT_OPTS="--color=dark"

# configuration for tpm
TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins/"

# shortcut to start nvim
nv () {
    if command -v nvim &>/dev/null; then
        nvim $@
    fi
}

# try to use bat in man
export BAT_THEME=gruvbox
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# function to send stuff to clipboard intelligently
toclip() {
    content=''
    # handle the different input
    # https://stackoverflow.com/questions/18761209/how-to-make-a-bash-function-which-can-read-from-standard-input?lq=1
    if [[ -t 0 ]]; then
        if [[ $# -gt 0 ]]; then
            content="$(echo "$*")"
        fi
    else
        content="$(cat -)"
    fi
    if [[ -z $content ]]; then
        echowarning 'no value to copy to clipboard' >&2
        exit 1
    fi
    if [[ -z $SSH_CLIENT ]]; then
        if ! command -v clip.exe &>/dev/null; then
            echo "clip.exe is not found" >&1
            if ! command -v xclip &>/dev/null; then
                echo "xclip is not installed either" >&1
                exit 1
            else
                echo -n "$content" | clip.exe
            fi
        else
            echo -n "$content" | xclip -selection clipboard
        fi
    else
        content="$(echo -n $content | base64 -)"
        echo -ne "\e]52;c;$content\x07"
    fi
}

# nvm stuff
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
