
# since I am using VIM, give me my c-b back
unbind C-b
set-option -g prefix C-s
bind-key C-s send-prefix

set -g default-terminal "xterm-256color"
# This is awesome: https://github.com/rakr/vim-one
set-option -ga terminal-overrides ",xterm-256color:Tc"

set-window-option -g mode-keys vi
set -g base-index 1
setw -g pane-base-index 1
# set -g renumber-windows on
set -g history-limit 100000
set-option -g update-environment "SSH_TTY TOCLIP_HOST_TMUX DISPLAY"
set -g escape-time 50
set set-clipboard on
set -g default-shell /bin/zsh

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind '%' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind c new-window -c '#{pane_current_path}' # Create new window
bind -r o select-pane -Z -t :.+

# # Integrate with my toclip
# if-shell -b 'test -z "$SSH_TTY"' "bind-key    -T copy-mode    C-w               send-keys -X copy-pipe-and-cancel 'toclip'"
# # if-shell -b 'test -z "$SSH_TTY"' "bind-key    -T copy-mode    MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'toclip'"
# if-shell -b 'test -z "$SSH_TTY"' "bind-key    -T copy-mode    M-w               send-keys -X copy-pipe-and-cancel 'toclip'"
# if-shell -b 'test -z "$SSH_TTY"' "bind-key    -T copy-mode-vi C-j               send-keys -X copy-pipe-and-cancel 'toclip'"
# if-shell -b 'test -z "$SSH_TTY"' "bind-key    -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel 'toclip'"
# if-shell -b 'test -z "$SSH_TTY"' "bind-key    -T copy-mode-vi y                 send-keys -X copy-pipe 'toclip'"
# # if-shell -b 'test -z "$SSH_TTY"' "bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'toclip'"

if-shell -b 'test -n "$TOCLIP_HOST_TMUX"' "bind-key    -T copy-mode    C-w               send-keys -X copy-pipe-and-cancel 'toclipt'"
if-shell -b 'test -n "$TOCLIP_HOST_TMUX"' "bind-key    -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-no-clear 'toclipt'"
if-shell -b 'test -n "$TOCLIP_HOST_TMUX"' "bind-key    -T copy-mode    M-w               send-keys -X copy-pipe-and-cancel 'toclipt'"
if-shell -b 'test -n "$TOCLIP_HOST_TMUX"' "bind-key    -T copy-mode-vi C-j               send-keys -X copy-pipe-and-cancel 'toclipt'"
if-shell -b 'test -n "$TOCLIP_HOST_TMUX"' "bind-key    -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel 'toclipt'"
if-shell -b 'test -n "$TOCLIP_HOST_TMUX"' "bind-key    -T copy-mode-vi y                 send-keys -X copy-pipe 'toclipt'"
if-shell -b 'test -n "$TOCLIP_HOST_TMUX"' "bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear 'toclipt'"

# When mouse lift, no clear
bind-key -T copy-mode -n MouseDragEnd1Pane send-keys -X copy-pipe-no-clear
bind-key -T copy-mode-vi -n MouseDragEnd1Pane send-keys -X copy-pipe-no-clear

# In copy mode, single click to exit the mode
bind-key -T copy-mode -n MouseUp1Pane send-keys -X cancel
bind-key -T copy-mode-vi -n MouseUp1Pane send-keys -X cancel

# vim like pane movement
bind-key -T prefix k     select-pane -U
bind-key -T prefix j     select-pane -D
bind-key -T prefix h     select-pane -L
bind-key -T prefix l     select-pane -R
bind-key -T prefix Up    select-pane -U
bind-key -T prefix Down  select-pane -D
bind-key -T prefix Left  select-pane -L
bind-key -T prefix Right select-pane -R

# Sourcing the tmux file
bind-key -T prefix R source-file "$HOME/.tmux.conf" \; display-message "source-file done"

# Remap the prefix a to the last window
bind -r a select-window -l

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# For VIM, quickly run the following to configure vim
bind-key -T prefix r send-keys ":set smartcase ignorecase incsearch mouse=ncv clipboard=unnamedplus scrolloff=5 | nnoremap : ; | nnoremap ; :" Enter
bind-key -T prefix b send-keys "export EDITOR=nvim ; set -o vi ; alias dir=ls ; alias exa=ls" Enter

# Set the tpm path
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

# plug in
set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'sainnhe/tmux-fzf'

# apply the tpm
run '~/repos/tpm/tpm'

